name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} / Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        django-version: ['5.1']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==${{ matrix.django-version }}.*
        pip install -e .[dev]
    
    - name: Run migrations check
      run: |
        cd example_project
        python manage.py makemigrations --check --dry-run
    
    - name: Check for missing migrations
      run: |
        cd example_project
        python manage.py migrate
    
    - name: Run Django checks
      run: |
        cd example_project
        python manage.py check
  
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8
    
    - name: Check code formatting with Black
      run: |
        black --check django_forms_workflows/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only django_forms_workflows/
    
    - name: Lint with flake8
      run: |
        flake8 django_forms_workflows/ --max-line-length=120 --extend-ignore=E203,W503
  
  build:
    name: Build Package
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel setuptools
    
    - name: Build distribution packages
      run: |
        python -m build
    
    - name: Check distribution packages
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-packages
        path: dist/

